Scoring API

Функционал API: принимает POST запросы, которые вызывают методы подсчета "скора", 
функционал подсчета "скора" в scoring.py. Чтобы получить результат пользователь отправляет 
в POST запросе валидный JSON определенного формата на локейшн /method.

1. Для запуска скрипта необходимо набрать в терминале следующую команду: 
   python ./api.py
2. Для передачи внешнего файла конфига необходимо указать его путь через аргумент 
   командной строки: --config [path], где path - путь до внешнего файла конфига
3. Дефолтный конфиг лежит в файле: ./config_api
4. Скрипт пишет свой лог в файл указынный в опции конфига: logging_to_file, 
   по умолчанию ./api.log
5. Для того чтобы лог скрипта писался в stdout необходимо удалить строку описывающую 
   опцию: logging_to_file из файла кофига. Другими словами, 
   строки logging_to_file = [path_file] в конфиге быть не должно
6. Уровень логирования определяется значением опции конфига: logging_to_file, по умочанию INFO
7. Порт на котором API обрабатывает запросы указаывается в опции конфига port, по умолчанию 8080

Тестирование

Для запуска тестов необходимо запустить тесты командой: python test_api.py. 
При успешном прохождении тестов последней строкой в выводе терминала должна быть фраза: OK.


Структура запроса:

{"account": "<имя компании партнера>", "login": "<имя пользователя>", "method": "<имя метода>", 
"token": "<аутентификационный токен>", "arguments": {<словарь с аргументами вызываемого метода>}}

 - account ‐ строка, опционально, может быть пустым
 - login ‐ строка, обязательно, может быть пустым
 - method ‐ строка, обязательно, может быть пустым
 - token ‐ строка, обязательно, может быть пустым
 - arguments ‐ словарь (объект в терминах json), обязательно, может быть пустым

Методы:

  online_score.
  Аргументы:
  - phone ‐ строка или число, длиной 11, начинается с 7, опционально, может быть пустым
  - email ‐ строка, в которой есть @, опционально, может быть пустым
  - first_name ‐ строка, опционально, может быть пустым
  - last_name ‐ строка, опционально, может быть пустым
  - birthday ‐ дата в формате DD.MM.YYYY, с которой прошло не больше 70 лет, опционально, может быть пустым
  - gender ‐ число 0, 1 или 2, опционально, может быть пустым

  clients_interests.
  Аргументы:
  - client_ids ‐ массив числе, обязательно, не пустое
  - date ‐ дата в формате DD.MM.YYYY, опционально, может быть пустым
